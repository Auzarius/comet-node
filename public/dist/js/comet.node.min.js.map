{"version":3,"sources":["app.js","app.routes.js","controllers/mainCtrl.js","controllers/ticketCtrl.js","controllers/userCtrl.js","services/authService.js","services/customerService.js","services/ticketService.js","services/userService.js"],"names":["angular","module","config","$httpProvider","interceptors","push","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","$rootScope","$location","Auth","vm","this","loggedIn","isLoggedIn","$on","event","location","path","getUser","then","node","user","data","$","animate","scrollTop","doLogin","processing","error","login","loginData","username","password","success","message","doLogout","logout","$scope","Ticket","simpleSearch","toggleAdvanced","searchBox","advancedForm","$setPristine","active","tickets","deleteTicket","id","recent","all","Customer","ticketData","saveTicket","create","ticketform","getCustomerList","getList","customerList","console","log","getCustomerById","result","filterList","customer","street","city","state","zipcode","$routeParams","get","ticket_id","update","event_processing","eventForm","getTicket","ticket","err","getEvents","events","addEvent","eventData","timespent","eventform","deleteEvent","getOne","event_id","saveEvent","comments","getFeedback","feedback","addComment","feedbackData","commentform","deleteComment","fb_id","saveComment","User","users","deleteUser","type","userData","saveUser","userform","user_id","self","factory","$http","$q","AuthToken","authFactory","post","setToken","token","getToken","cache","reject","$window","authTokenFactory","localStorage","getItem","setItem","removeItem","interceptorFactory","request","headers","responseError","response","status","customerService","source","i","len","length","ticketFactory","put","ticketId","eventId","delete","feedbackId","userFactory"],"mappings":"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","file":"comet.node.min.js","sourcesContent":["angular.module('comet', \r\n               [\r\n                    'app.routes',\r\n                    'ngAnimate',\r\n                    'authService',\r\n                    'mainCtrl',\r\n                    'userCtrl',\r\n                    'userService',\r\n                    'ticketCtrl',\r\n                    'ticketService',\r\n                    'customerService'\r\n               ])\r\n     // application configuration to integrate token into requests\r\n     .config(function($httpProvider) {\r\n\r\n          // attach our auth interceptor to the http requests\r\n          $httpProvider.interceptors.push('AuthInterceptor');\r\n\r\n     });\r\n","// inject ngRoute for all our routing needs\r\nangular.module('app.routes', ['ngRoute'])\r\n\t// configure our routes\r\n\t.config(function ($routeProvider, $locationProvider) {\r\n\t\t$routeProvider\r\n\r\n\t\t\t.when('/', {\r\n\t\t\t\ttemplateUrl : './views/pages/home.html'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/signin', {\r\n\t\t\t\ttemplateUrl : './views/pages/login.html',\r\n\t\t\t\tcontroller  : 'mainController',\r\n\t\t\t\tcontrollerAs: 'login'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/feedback', {\r\n\t\t\t\ttemplateUrl : './views/pages/feedback/all.html',\r\n\t\t\t\tcontroller  : 'feedbackController',\r\n\t\t\t\tcontrollerAs: 'feedback'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/feedback/:fb_id/edit', {\r\n\t\t\t\ttemplateUrl : './views/pages/feedback/edit.html',\r\n\t\t\t\tcontroller  : 'feedbackEditController',\r\n\t\t\t\tcontrollerAs: 'feedback'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t// backup 403 display if the server throws the 403 status code\r\n\t\t\t.when('/forbidden', {\r\n\t\t\t\ttemplateUrl : './views/pages/403.html'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/users', {\r\n\t\t\t\ttemplateUrl : './views/pages/users/all.html',\r\n\t\t\t\tcontroller  : 'userController',\r\n\t\t\t\tcontrollerAs: 'user'\r\n\t\t\t})\r\n\r\n\t\t\t.when('/users/create', {\r\n\t\t\t\ttemplateUrl : './views/pages/users/create.html',\r\n\t\t\t\tcontroller  : 'userCreateController',\r\n\t\t\t\tcontrollerAs: 'user'\r\n\t\t\t})\r\n\r\n\t\t\t.when('/users/:user_id', {\r\n\t\t\t\ttemplateUrl : './views/pages/users/edit.html',\r\n\t\t\t\tcontroller  : 'userEditController',\r\n\t\t\t\tcontrollerAs: 'user'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/profile', {\r\n\t\t\t\ttemplateUrl : './views/pages/profile.html',\r\n\t\t\t\tcontroller  : 'userProfileController',\r\n\t\t\t\tcontrollerAs: 'user'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/tickets', {\r\n\t\t\t\ttemplateUrl : './views/pages/tickets/all.html',\r\n\t\t\t\tcontroller  : 'ticketController',\r\n\t\t\t\tcontrollerAs: 'ticket'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/tickets/all', {\r\n\t\t\t\ttemplateUrl : './views/pages/tickets/all.html',\r\n\t\t\t\tcontroller  : 'ticketAllController',\r\n\t\t\t\tcontrollerAs: 'ticket'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/tickets/recent', {\r\n\t\t\t\ttemplateUrl : './views/pages/tickets/recent.html',\r\n\t\t\t\tcontroller  : 'ticketRecentController',\r\n\t\t\t\tcontrollerAs: 'ticket'\r\n\t\t\t})\r\n\r\n\t\t\t.when('/tickets/create', {\r\n\t\t\t\ttemplateUrl : './views/pages/tickets/create.html',\r\n\t\t\t\tcontroller  : 'ticketCreateController',\r\n\t\t\t\tcontrollerAs: 'ticket'\r\n\t\t\t})\r\n\r\n\t\t\t.when('/tickets/:ticket_id/edit', {\r\n\t\t\t\ttemplateUrl : './views/pages/tickets/edit.html',\r\n\t\t\t\tcontroller  : 'ticketEditController',\r\n\t\t\t\tcontrollerAs: 'ticket'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/tickets/:ticket_id', {\r\n\t\t\t\ttemplateUrl : './views/pages/tickets/single.html',\r\n\t\t\t\tcontroller  : 'ticketViewController',\r\n\t\t\t\tcontrollerAs: 'ticket'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.when('/events/:event_id/edit', {\r\n\t\t\t\ttemplateUrl : './views/pages/events/edit.html',\r\n\t\t\t\tcontroller  : 'eventEditController',\r\n\t\t\t\tcontrollerAs: 'event'\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\t.otherwise({\r\n\t\t\t\tredirectTo: '/'\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t// set our app up to have pretty URLS\r\n\t\t\t$locationProvider.html5Mode(true);\r\n\t});\r\n\t","angular.module('mainCtrl', ['angularMoment'])\r\n\r\n.controller('mainController', function($rootScope, $location, Auth) {\r\n\r\n\tvar vm = this;\r\n\r\n\t// get info if a person is logged in\r\n\tvm.loggedIn = Auth.isLoggedIn();\r\n\t\r\n\t\r\n\t// check to see if a user is logged in on every request\r\n\t$rootScope.$on('$routeChangeStart', function(event) {\r\n\t\tvm.loggedIn = Auth.isLoggedIn();\t\r\n\t\t\r\n\t\tif (vm.loggedIn) {\r\n\t\t\tvm.location = $location.path();\r\n\t\t\tAuth.getUser()\r\n\t\t\t.then(function(node) {\r\n\t\t\t\tvm.user = node.data\r\n\t\t\t});\t\r\n\t\t\t\r\n\t\t\tif ( $location.path() == '/signin' ) {\r\n\t\t\t\t$location.path('/');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if ( $location.path() == '/' || $location.path() == '/signin' ) {\r\n\t\t\t// do nothing;\r\n\t\t} else {\r\n\t\t\t$location.path('/signin');\r\n\t\t}\r\n\t\t// get user information on page load\r\n\t\t\r\n\t});\r\n\t\r\n\t// resets the view to the top of the page when a new route loads\r\n\t// this prevents the view focus from staying the same from page to page\r\n\t$rootScope.$on('$routeChangeSuccess',function() { \r\n\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t});\r\n\r\n\t// function to handle login form\r\n\tvm.doLogin = function() {\r\n\t\tvm.processing = true;\r\n\r\n\t\t// clear the error\r\n\t\tvm.error = '';\r\n\r\n\t\tAuth.login(vm.loginData.username, vm.loginData.password)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.processing = false;\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvm.user = vm.loginData.username;\r\n\t\t\t\t\r\n\t\t\t\t// if a user successfully logs in, redirect to tickets page\r\n\t\t\t\tif (data.success)\t\t\t\r\n\t\t\t\t\t$location.path('/');\r\n\t\t\t\telse \r\n\t\t\t\t\tvm.error = data.message;\r\n\t\t\t\t\r\n\t\t\t});\r\n\t};\r\n\r\n\t// function to handle logging out\r\n\tvm.doLogout = function() {\r\n\t\tAuth.logout();\r\n\t\tvm.user = null;\r\n\t\t\r\n\t\t$location.path('/signin');\r\n\t};\r\n\r\n});","angular.module('ticketCtrl', ['ticketService', 'customerService'])\r\n\r\n.controller('ticketController', function($scope, Ticket) {\r\n\r\n\tvar vm = this;\r\n\tvm.simpleSearch = true;\r\n\t// set a processing variable to show loading things\r\n\tvm.processing = true;\r\n\t\r\n\tvm.toggleAdvanced = function() {\r\n\t\t$scope.searchBox = null;\r\n\t\t$scope.advancedForm.$setPristine();\r\n\t\tvm.simpleSearch = !vm.simpleSearch;\r\n\t}\r\n\t\t\r\n\t// grab all the active tickets at page load\r\n\tTicket.active()\r\n\t\t.success(function(node) {\r\n\r\n\t\t\tif ( node.success == false || node.data == null ) {\r\n\t\t\t\tvm.tickets = null;\r\n\t\t\t} else {\r\n\t\t\t\tvm.tickets = node.data;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.processing = false;\r\n\t\t})\r\n\t\t.error(function(node) {\r\n\t\t\tif (node) {\r\n\t\t\t\tvm.message = node;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.tickets = null;\r\n\t\t\tvm.processing = false;\r\n\t\t});\r\n\t\r\n\t// function to delete a ticket\r\n\tvm.deleteTicket = function(id) {\r\n\t\tvm.processing = true;\r\n\t\t\r\n\t\tTicket.delete(id)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\t\r\n\t\t\t\tif ( data.success) {\r\n\t\t\t\t\tTicket.active()\r\n\t\t\t\t\t\t.success(function(node) {\r\n\t\t\t\t\t\t\tvm.tickets = node.data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t};\r\n})\r\n\r\n.controller('ticketRecentController', function($scope, Ticket) {\r\n\tvar vm = this;\r\n\tvm.processing = true;\r\n\tvm.simpleSearch = true;\r\n\t\r\n\tvm.toggleAdvanced = function() {\r\n\t\t$scope.searchBox = null;\r\n\t\t$scope.advancedForm.$setPristine();\r\n\t\tvm.simpleSearch = !vm.simpleSearch;\r\n\t}\r\n\t\r\n\tTicket.recent()\r\n\t\t.success(function(node) {\r\n\r\n\t\t\tif ( node.success == false || node.data == null ) {\r\n\t\t\t\tvm.tickets = null;\r\n\t\t\t} else {\r\n\t\t\t\tvm.tickets = node.data;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.processing = false;\r\n\t\t})\r\n\t\t.error(function(node) {\r\n\t\t\tif (node) {\r\n\t\t\t\tvm.message = node;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.tickets = null;\r\n\t\t\tvm.processing = false;\r\n\t\t});\r\n\t\t\r\n\t// function to delete a ticket\r\n\tvm.deleteTicket = function(id) {\r\n\t\tvm.processing = true;\r\n\t\t\r\n\t\tTicket.delete(id)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\t\r\n\t\t\t\tif ( data.success) {\r\n\t\t\t\t\tTicket.recent()\r\n\t\t\t\t\t\t.success(function(node) {\r\n\t\t\t\t\t\t\tvm.tickets = node.data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t};\r\n})\r\n\r\n.controller('ticketAllController', function($scope, Ticket) {\r\n\r\n\tvar vm = this;\r\n\tvm.simpleSearch = true;\r\n\t// set a processing variable to show loading things\r\n\tvm.processing = true;\r\n\t\r\n\tvm.toggleAdvanced = function() {\r\n\t\t$scope.searchBox = null;\r\n\t\t$scope.advancedForm.$setPristine();\r\n\t\tvm.simpleSearch = !vm.simpleSearch;\r\n\t}\r\n\t\r\n\t// grab all the active tickets at page load\r\n\tTicket.all()\r\n\t\t.success(function(node) {\r\n\r\n\t\t\tif ( node.success == false || node.data == null) {\r\n\t\t\t\tvm.tickets = null;\r\n\t\t\t} else {\r\n\t\t\t\tvm.tickets = node.data;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.processing = false;\r\n\t\t});\r\n\r\n\t// function to delete a ticket\r\n\tvm.deleteTicket = function(id) {\r\n\t\tvm.processing = true;\r\n\t\t\r\n\t\tTicket.delete(id)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\t\r\n\t\t\t\tif ( data.success) {\r\n\t\t\t\t\tTicket.all()\r\n\t\t\t\t\t\t.success(function(node) {\r\n\t\t\t\t\t\t\tvm.tickets = node.data;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t};\r\n})\r\n\r\n// controller applied to ticket creation page\r\n.controller('ticketCreateController', function($scope, Ticket, Customer) {\r\n\t\r\n\tvar vm = this;\r\n\tvm.ticketData = {};\r\n\r\n\t// function to create a ticket\r\n\tvm.saveTicket = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\t\t\r\n\t\t// use the create function in the ticketService\r\n\t\tTicket.create(vm.ticketData)\r\n\t\t\t.success(function(node) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = node.message;\r\n\t\t\t\tvm.ticketData = {};\r\n\t\t\t\t$scope.ticketform.$setPristine();\r\n\t\t\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t\t\t});\r\n\t\t\t\r\n\t};\r\n\t\r\n\tvm.getCustomerList = function() {\r\n\t\tCustomer.getList()\r\n\t\t\t.success(function(node) {\r\n\t\t\t\tvm.customerList = node.data;\r\n\t\t\t})\r\n\t\t\t.error(function(node) {\r\n\t\t\t\tconsole.log(\"Message\", node.message);\r\n\t\t\t\tvm.customerList = ['--'];\r\n\t\t\t});\r\n\t};\r\n\t\r\n\t/*\r\n\tvm.getCustomerById = function(id) {\r\n\t\tCustomer.get(id)\r\n\t\t\t.success(function(node) {\r\n\t\t\t\tvm.ticketData.customer = node.data.customer;\r\n\t\t\t\tvm.ticketData.street = node.data.street;\r\n\t\t\t\tvm.ticketData.city = node.data.city;\r\n\t\t\t\tvm.ticketData.state = node.data.state;\r\n\t\t\t\tvm.ticketData.zipcode = node.data.zipcode;\r\n\t\t\t})\r\n\t\t\t.error(function(node) {\r\n\t\t\t\tconsole.log(\"Message\", node.message);\r\n\t\t\t\tvm.ticketData.customer = '--';\r\n\t\t\t});\r\n\t};*/\r\n\t\r\n\tvm.getCustomerById = function(id) {\r\n\t\tvar result = Customer.filterList(vm.customerList, id);\r\n\t\tvm.ticketData.customer = result.customer;\r\n\t\tvm.ticketData.street = result.street;\r\n\t\tvm.ticketData.city = result.city;\r\n\t\tvm.ticketData.state = result.state;\r\n\t\tvm.ticketData.zipcode = result.zipcode;\r\n\t};\r\n\t\r\n\tvm.getCustomerList();\r\n})\r\n\r\n// controller applied to ticket edit page\r\n.controller('ticketEditController', function($routeParams, Ticket) {\r\n\r\n\tvar vm = this;\r\n\r\n\t// get the ticket data for the ticket you want to edit\r\n\t// $routeParams is the way we grab data from the URL\r\n\tTicket.get($routeParams.ticket_id)\r\n\t\t.success(function(node) {\r\n\t\t\tvm.ticketData = node.data;\r\n\t\t});\r\n\r\n\t// function to save the ticket\r\n\tvm.saveTicket = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\r\n\t\t// call the ticketService function to update \r\n\t\tTicket.update($routeParams.ticket_id, vm.ticketData)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t\t\t});\r\n\t};\r\n\r\n})\r\n\r\n.controller('ticketViewController', function($scope, $routeParams, $location, Ticket) {\r\n\r\n\tvar vm = this;\r\n\tvm.processing = true;\r\n\tvm.event_processing = true;\r\n\t$scope.eventForm = {};\r\n\t\r\n\t// get the ticket data for the ticket you want to view\r\n\t// $routeParams is the way we grab data from the URL\r\n\tvm.getTicket = function(id) {\r\n\t\tTicket.get(id)\r\n\t\t\t.success(function(node) {\r\n\t\t\t\tvm.ticket = node.data;\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t})\r\n\t\t\t.error(function(err) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = err;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tvm.getTicket($routeParams.ticket_id);\r\n\t\r\n\tvm.deleteTicket = function(id) {\r\n\t\tvm.processing = true;\r\n\t\t\r\n\t\tTicket.delete(id)\r\n\t\t\t.success(function(data) {\t\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\t\r\n\t\t\t\tif ( data.success) {\r\n\t\t\t\t\t$location.path('/tickets');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tvm.getEvents = function() {\r\n\t\tTicket.event.get($routeParams.ticket_id)\r\n\t\t.success(function(node) {\r\n\t\t\tvm.events = node.data;\r\n\t\t\tvm.event_processing = false;\r\n\t\t})\r\n\t\t.error(function(err) {\r\n\t\t\tvm.event_processing = false;\r\n\t\t\tvm.message = err;\r\n\t\t});\r\n\t}\t\r\n\t\t\r\n\tvm.getEvents();\r\n\t\r\n\tvm.addEvent = function() {\r\n\t\tvm.event_processing = true;\r\n\t\tvm.message = '';\r\n\r\n\t\tTicket.event.create($routeParams.ticket_id, vm.eventData)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.event_processing = false;\r\n\t\t\t\tvm.ticket.timespent += vm.eventData.timespent;\r\n\t\t\t\tvm.eventData = {};\r\n\t\t\t\t$scope.eventform.$setPristine();\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t\tvm.getEvents();\r\n\t\t\t})\r\n\t\t\t.error(function(data) {\r\n\t\t\t\tvm.event_processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t}\r\n\t\r\n\tvm.deleteEvent = function(id) {\r\n\t\tvm.event_processing = true;\r\n\t\t\r\n\t\tTicket.event.delete(id)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tif ( data.success ) {\r\n\t\t\t\t\tvm.getEvents();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvm.getTicket($routeParams.ticket_id);\r\n\t\t\t\tvm.event_processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t})\r\n\t\t\t.error(function(data) {\r\n\t\t\t\tvm.event_processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t}\r\n})\r\n\r\n.controller('eventEditController', function($routeParams, Ticket) {\r\n\r\n\tvar vm = this;\r\n\tvm.eventData = {};\r\n\r\n\tTicket.event.getOne($routeParams.event_id)\r\n\t\t.success(function(node) {\r\n\t\t\tvm.eventData = node.data;\r\n\t\t});\r\n\r\n\t// function to save the event\r\n\tvm.saveEvent = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\r\n\t\t// call the ticketService function to update \r\n\t\tTicket.event.update(vm.eventData.id, vm.eventData)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t\t\t})\r\n\t\t\t.error(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t};\r\n})\r\n\r\n.controller('feedbackController', function($scope, $location, Ticket) {\r\n\r\n\tvar vm = this;\r\n\tvm.comments = {};\r\n\tvm.processing = true;\r\n\t\r\n\tvm.getFeedback = function() {\r\n\t\tTicket.feedback.get()\r\n\t\t.success(function(node) {\r\n\t\t\tvm.comments = node.data;\r\n\t\t\tvm.processing = false;\r\n\t\t})\r\n\t\t.error(function(err) {\r\n\t\t\tvm.processing = false;\r\n\t\t\tvm.message = err;\r\n\t\t});\r\n\t};\r\n\t\t\r\n\tvm.getFeedback();\r\n\t\r\n\tvm.addComment = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\t\t\r\n\t\tTicket.feedback.create(vm.feedbackData)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.feedbackData = {};\r\n\t\t\t\t$scope.commentform.$setPristine();\r\n\t\t\t\tvm.getFeedback();\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t})\r\n\t\t\t.error(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t};\r\n\t\r\n\tvm.deleteComment = function(id) {\r\n\t\tvm.processing = true;\r\n\t\t\r\n\t\tTicket.feedback.delete(id)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tif ( data.success ) {\r\n\t\t\t\t\tvm.getFeedback();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t})\r\n\t\t\t.error(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t};\r\n})\r\n\r\n.controller('feedbackEditController', function($routeParams, Ticket) {\r\n\r\n\tvar vm = this;\r\n\tvm.processing = true;\r\n\tvm.feedbackData = {};\r\n\t\r\n\tTicket.feedback.getOne($routeParams.fb_id)\r\n\t\t.success(function(node) {\r\n\t\t\tvm.feedbackData = node.data;\r\n\t\t\tvm.processing = false;\r\n\t\t})\r\n\t\t.error(function(node) {\r\n\t\t\tvm.processing = false;\r\n\t\t});\r\n\r\n\t// function to save the event\r\n\tvm.saveComment = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\r\n\t\t// call the ticketService function to update \r\n\t\tTicket.feedback.update(vm.feedbackData.id, vm.feedbackData)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t\t\t})\r\n\t\t\t.error(function(data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t});\r\n\t};\r\n})\r\n","angular.module('userCtrl', ['userService'])\r\n\r\n.controller('userController', function(User) {\r\n\r\n\tvar vm = this;\r\n\r\n\t// set a processing variable to show loading things\r\n\tvm.processing = true;\r\n\r\n\t// grab all the users at page load\r\n\tUser.all()\r\n\t\t.success(function (node) {\r\n\r\n\t\t\tif ( node.success == false || node.data == null ) {\r\n\t\t\t\tvm.users = null;\r\n\t\t\t} else {\r\n\t\t\t\tvm.users = node.data;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.processing = false;\r\n\t\t})\r\n\t\t.error(function (node) {\r\n\t\t\tif (node) {\r\n\t\t\t\tvm.message = node;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvm.users = null;\r\n\t\t\tvm.processing = false;\r\n\t\t});\r\n\r\n\t// function to delete a user\r\n\tvm.deleteUser = function(id) {\r\n\t\tvm.processing = true;\r\n\t\tvm.users = {};\r\n\t\t\r\n\t\tUser.delete(id)\r\n\t\t\t.success(function(data) {\r\n\t\t\t\t\r\n\t\t\t\t// get all users to update the table\r\n\t\t\t\t// could also return the list of users with the delete call\r\n\t\t\t\tUser.all()\r\n\t\t\t\t\t.success(function (node) {\r\n\t\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\t\tvm.users = node.data;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvm.message = 'The user was successfully deleted!'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t});\r\n\t};\r\n\r\n})\r\n\r\n// controller applied to user creation page\r\n.controller('userCreateController', function($scope, User) {\r\n\t\r\n\tvar vm = this;\r\n\tvm.type = 'create';\r\n\tvm.userData = {};\r\n\r\n\t// function to create a user\r\n\tvm.saveUser = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\r\n\t\t// use the create function in the userService\r\n\t\tUser.create(vm.userData)\r\n\t\t\t.success(function (data) {\r\n\t\t\t\tvm.processing = false;\t\t\t\t\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t\t\r\n\t\t\t\tif (data.success) {\r\n\t\t\t\t\tvm.userData = {};\r\n\t\t\t\t\t$scope.userform.$setPristine();\r\n\t\t\t\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t};\t\r\n\r\n})\r\n\r\n// controller applied to user edit page\r\n.controller('userEditController', function($routeParams, User) {\r\n\r\n\tvar vm = this;\r\n\tvm.type = 'edit';\r\n\t\r\n\t// get the user data for the user you want to edit\r\n\t// $routeParams is the way we grab data from the URL\r\n\tUser.get($routeParams.user_id)\r\n\t\t.success(function (node) {\r\n\t\t\tvm.userData = node.data;\r\n\t\t});\r\n\r\n\t// function to save the user\r\n\tvm.saveUser = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\r\n\t\t// call the userService function to update \r\n\t\tUser.update($routeParams.user_id, vm.userData)\r\n\t\t\t.success(function (data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t\t\t});\r\n\t};\r\n\r\n})\r\n\r\n// controller applied to user edit page\r\n.controller('userProfileController', function($routeParams, User) {\r\n\r\n\tvar vm = this;\r\n\r\n\t// get the user data for the user you want to edit\r\n\t// $routeParams is the way we grab data from the URL\r\n\tUser.self()\r\n\t\t.success(function (user) {\r\n\t\t\tvm.userData = user;\r\n\t\t});\r\n\r\n\t// function to save the user\r\n\tvm.saveUser = function() {\r\n\t\tvm.processing = true;\r\n\t\tvm.message = '';\r\n\r\n\t\t// call the userService function to update \r\n\t\tUser.update(vm.userData.id, vm.userData)\r\n\t\t\t.success(function (data) {\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.message = data.message;\r\n\t\t\t\t$(\"html, body\").animate({ scrollTop: 0 }, 200); \r\n\t\t\t});\r\n\t};\r\n\r\n});\r\n\r\n","// Courtesy of Scotch.io Chris Sevilleja & Holly Lloyd\r\n// http://leanpub.com/mean-machine\r\n\r\nangular.module('authService', [])\r\n\r\n// ===================================================\r\n// auth factory to login and get information\r\n// inject $http for communicating with the API\r\n// inject $q to return promise objects\r\n// inject AuthToken to manage tokens\r\n// ===================================================\r\n.factory('Auth', function($http, $q, AuthToken) {\r\n\r\n\t// create auth factory object\r\n\tvar authFactory = {};\r\n\r\n\t// log a user in\r\n\tauthFactory.login = function(username, password) {\r\n\r\n\t\t// return the promise object and its data\r\n\t\treturn $http.post('/api/authenticate', {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password\r\n\t\t})\r\n\t\t\t.success(function(data) {\r\n\t\t\t\tAuthToken.setToken(data.token);\r\n       \t\t\treturn data;\r\n\t\t\t});\r\n\t};\r\n\r\n\t// log a user out by clearing the token\r\n\tauthFactory.logout = function() {\r\n\t\t// clear the token\r\n\t\tAuthToken.setToken();\r\n\t};\r\n\r\n\t// check if a user is logged in\r\n\t// checks if there is a local token\r\n\tauthFactory.isLoggedIn = function() {\r\n\t\tif (AuthToken.getToken()) \r\n\t\t\treturn true;\r\n\t\telse\r\n\t\t\treturn false;\t\r\n\t};\r\n\r\n\t// get the logged in user\r\n\tauthFactory.getUser = function() {\r\n\t\tif (AuthToken.getToken())\r\n\t\t\treturn $http.get('/api/me', { cache: false });\r\n\t\telse\r\n\t\t\treturn $q.reject({ message: 'User has no token.' });\t\t\r\n\t};\r\n\r\n\t// return auth factory object\r\n\treturn authFactory;\r\n\r\n})\r\n\r\n// ===================================================\r\n// factory for handling tokens\r\n// inject $window to store token client-side\r\n// ===================================================\r\n.factory('AuthToken', function($window) {\r\n\r\n\tvar authTokenFactory = {};\r\n\r\n\t// get the token out of local storage\r\n\tauthTokenFactory.getToken = function() {\r\n\t\treturn $window.localStorage.getItem('token');\r\n\t};\r\n\r\n\t// function to set token or clear token\r\n\t// if a token is passed, set the token\r\n\t// if there is no token, clear it from local storage\r\n\tauthTokenFactory.setToken = function(token) {\r\n\t\tif (token)\r\n\t\t\t$window.localStorage.setItem('token', token);\r\n\t \telse\r\n\t\t\t$window.localStorage.removeItem('token');\r\n\t};\r\n\r\n\treturn authTokenFactory;\r\n\r\n})\r\n\r\n// ===================================================\r\n// application configuration to integrate token into requests\r\n// ===================================================\r\n.factory('AuthInterceptor', function($q, $location, AuthToken) {\r\n\r\n\tvar interceptorFactory = {};\r\n\r\n\t// this will happen on all HTTP requests\r\n\tinterceptorFactory.request = function(config) {\r\n\r\n\t\t// grab the token\r\n\t\tvar token = AuthToken.getToken();\r\n\r\n\t\t// if the token exists, add it to the header as x-access-token\r\n\t\tif (token) \r\n\t\t\tconfig.headers['x-access-token'] = token;\r\n\t\t\r\n\t\treturn config;\r\n\t};\r\n\r\n\t// happens on response errors\r\n\tinterceptorFactory.responseError = function(response) {\r\n\r\n\t\t// if our server returns a 403 forbidden response\r\n\t\tif (response.status == 401) {\r\n\t\t\tAuthToken.setToken();\r\n\t\t\t$location.path('/signin');\r\n\t\t} else if (response.status == 403) {\r\n\t\t\t$location.path('/forbidden');\r\n\t\t}\r\n\r\n\t\t// return the errors from the server as a promise\r\n\t\treturn $q.reject(response);\r\n\t};\r\n\r\n\treturn interceptorFactory;\r\n\t\r\n});","angular.module('customerService', [])\r\n\r\n.factory('Customer', function($http) {\r\n\r\n\t// create a new object\r\n\tvar customerService = {};\r\n\r\n\t// get a single customers data\r\n\tcustomerService.get = function(id) {\r\n\t\treturn $http.get('/api/customers/' + id);\r\n\t};\r\n\r\n\t// get the customer list\r\n\tcustomerService.getList = function() {\r\n\t\treturn $http.get('/api/customers');\r\n\t};\r\n\t\r\n\tcustomerService.filterList = function(source, id) {\r\n\t\tfor(var i = 0, len = source.length; i < len; i++) {\r\n\t\t\tif(source[i].id == id) {\r\n\t\t\t\treturn source[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t};\r\n\r\n\t// return our entire customerService object\r\n\treturn customerService;\r\n\r\n});\r\n","angular.module('ticketService', [])\r\n\r\n.factory('Ticket', function($http) {\r\n\r\n\t// create a new object\r\n\tvar ticketFactory = {};\r\n\r\n\t// get a single ticket\r\n\tticketFactory.get = function(id) {\r\n\t\treturn $http.get('/api/tickets/' + id);\r\n\t};\r\n\r\n\t// get all ticket\r\n\tticketFactory.active = function() {\r\n\t\treturn $http.get('/api/tickets');\r\n\t};\r\n\t\r\n\tticketFactory.all = function() {\r\n\t\treturn $http.get('/api/tickets/all');\r\n\t};\r\n\t\r\n\tticketFactory.recent = function() {\r\n\t\treturn $http.get('/api/tickets/recent');\r\n\t};\r\n\r\n\t// create a ticket\r\n\tticketFactory.create = function(ticketData) {\r\n\t\treturn $http.post('/api/tickets/', ticketData);\r\n\t};\r\n\r\n\t// update a ticket\r\n\tticketFactory.update = function(id, ticketData) {\r\n\t\treturn $http.put('/api/tickets/' + id, ticketData);\r\n\t};\r\n\r\n\t// delete a ticket\r\n\tticketFactory.delete = function(id) {\r\n\t\treturn $http.delete('/api/tickets/' + id);\r\n\t};\r\n\t\r\n\tticketFactory.event = {\r\n\t\tget : function(ticketId) {\r\n\t\t\treturn $http.get('/api/tickets/' + ticketId + '/events');\r\n\t\t},\r\n\t\t\r\n\t\tgetOne : function (eventId) {\r\n\t\t\treturn $http.get('/api/events/' + eventId);\r\n\t\t},\r\n\t\t\r\n\t\tcreate : function(ticketId, eventData) {\r\n\t\t\treturn $http.post('/api/tickets/' + ticketId + '/events', eventData);\r\n\t\t},\r\n\t\t\r\n\t\tupdate : function(eventId, eventData) {\r\n\t\t\treturn $http.put('/api/events/' + eventId, eventData);\r\n\t\t},\r\n\t\t\r\n\t\tdelete : function(eventId) {\r\n\t\t\treturn $http.delete('/api/events/' + eventId)\r\n\t\t}\r\n\t};\r\n\t\r\n\tticketFactory.feedback = {\r\n\t\tget : function () {\r\n\t\t\treturn $http.get('/api/feedback/');\r\n\t\t},\r\n\t\t\r\n\t\tgetOne : function (feedbackId) {\r\n\t\t\treturn $http.get('/api/feedback/' + feedbackId);\r\n\t\t},\r\n\t\t\r\n\t\tcreate : function (feedbackData) {\r\n\t\t\treturn $http.post('/api/feedback/', feedbackData);\r\n\t\t},\r\n\t\t\r\n\t\tupdate : function (feedbackId, feedbackData) {\r\n\t\t\treturn $http.put('/api/feedback/' + feedbackId, feedbackData);\r\n\t\t},\r\n\t\t\r\n\t\tdelete : function (feedbackId) {\r\n\t\t\treturn $http.delete('/api/feedback/' + feedbackId)\r\n\t\t}\r\n\t};\r\n\r\n\t// return our entire ticketFactory object\r\n\treturn ticketFactory;\r\n\r\n});","angular.module('userService', [])\r\n\r\n.factory('User', function($http) {\r\n\r\n\t// create a new object\r\n\tvar userFactory = {};\r\n\r\n\t// get a single user\r\n\tuserFactory.get = function(id) {\r\n\t\treturn $http.get('/api/users/' + id);\r\n\t};\r\n\t\r\n\t// get self\r\n\tuserFactory.self = function() {\r\n\t\treturn $http.get('/api/me');\r\n\t};\r\n\r\n\t// get all users\r\n\tuserFactory.all = function() {\r\n\t\treturn $http.get('/api/users/');\r\n\t};\r\n\r\n\t// create a user\r\n\tuserFactory.create = function(userData) {\r\n\t\treturn $http.post('/api/users/', userData);\r\n\t};\r\n\r\n\t// update a user\r\n\tuserFactory.update = function(id, userData) {\r\n\t\treturn $http.put('/api/users/' + id, userData);\r\n\t};\r\n\r\n\t// delete a user\r\n\tuserFactory.delete = function(id) {\r\n\t\treturn $http.delete('/api/users/' + id);\r\n\t};\r\n\r\n\t// return our entire userFactory object\r\n\treturn userFactory;\r\n\r\n});"],"sourceRoot":"/source/"}